
    "# import required libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn import metrics \n",
    "from math import sqrt\n"

    "#load the dataset\n",
    "data=pd.read_csv(\"C:\\CC\\Salary.csv\")"
 
    "#prepare the dataset for training \n",
    "X=data.drop(['Salary'],axis=1)\n",
    "y=data['Salary']\n"

    "train_data,test_data,train_labels,test_labels=train_test_split(X,y,train_size=0.2,random_state=0)"
 

    "#train the model\n",
    "lin_reg=LinearRegression()\n",
    "lin_reg.fit(train_data,train_labels)\n"

    "#predict the salary on the test data\n",
    "pred_labels=lin_reg.predict(test_data)"
 
    "predicted_salary=np.array(\"pred_labels\")"
  
    "pred_labels"
  
    "actual_salary=np.array(data[\"Salary\"])"
  
    "actual_salary"
  
    "#plot a graph\n",
    "plt.plot(actual_salary,label='Actual Salary')\n",
    "plt.plot(pred_labels,label='Predicted Salary')\n",
    "# add axis labels and title\n",
    "plt.ylabel('Predicted Salary')\n",
    "plt.xlabel('Actual Salary')\n",
    "plt.title('Actual Vs Predicted Salaries')\n",
    "#Add legend and grid\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "# display the plot\n",
    "plt.show()"
    
    #display the performance score
    "print(\"Training set score:{:.3f}\".format(lin_reg.score(train_data,train_labels)))\n",
    "print(\"Test set score:{:.3f}\".format(lin_reg.score(test_data,test_labels)))"

